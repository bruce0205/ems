<link href="../vendors/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css" rel="stylesheet">
<script src="../build/js/dataTables.cellEdit.js"></script>


<style>
  .required {
    color: #E57373
  }

  .modal-mask {
    position: fixed;
    z-index: 9998;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, .5);
    display: table;
  }

  .modal-wrapper {
    display: table-cell;
    vertical-align: middle;
  }

  .modal-container {
    width: 600px;
    margin: 0px auto;
    padding: 5px 10px;
    background-color: #fff;
    border-radius: 5px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, .33);
    font-family: Helvetica, Arial, sans-serif;
  }

  .modal-header h4 {
    margin-top: 0;
    color: #42b983;
  }

  .modal-body {
    margin: 0px 0;
  }

  .modal-default-button {
    float: right;
  }

  .stop-scrolling {
    height: 100%;
    overflow: hidden;
  }

  .fade-enter-active {
    transition: opacity 1.5s;
  }

  .fade-enter {
    opacity: 0;
  }
</style>

<script src="../build/js/vue.min.js"></script>

<div id="app" class="right_col" role="main">
  <button style="display: none" id="show-modal" @click="showResetPasswordModal = true">Show Modal</button>
  <modal v-if="showModal" :form-type="formType" :maf-pn="mafPn" :maf-mold="mafMold" @cancel="showModal = false"
    @close="close">
  </modal>
  <reason v-if="showReasonModal" :maf-pn="mafPn" :maf-mold="mafMold" @cancel="showReasonModal = false" @close="close">
  </reason>

  <div class="">
    <div class="page-title">
      <div class="title_left">
        <h3>生產料號基本資料維護
          <small></small>
        </h3>
      </div>
    </div>

    <div class="clearfix"></div>

    <div class="row">
      <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
          <div class="x_title">
            <h2>查詢資訊
            </h2>
            <div class="clearfix"></div>
          </div>
          <div class="x_content" style="width: 100%">
            <form class="form-horizontal">

              <div style="display: block;" class="col-md-4 col-sm-12 col-xs-12 form-group">
                <label style="text-align:left" class="control-label col-md-4 col-sm-4 col-xs-12">料號</label>
                <div class="col-md-8 col-sm-8 col-xs-12">
                  <input id="mafPn" type="text" class="form-control" placeholder="">
                </div>
              </div>

              <div style="display: block;" class="col-md-4 col-sm-12 col-xs-12 form-group">
                <label style="text-align:left" class="control-label col-md-4 col-sm-4 col-xs-12">模號</label>
                <div class="col-md-8 col-sm-8 col-xs-12">
                  <input id="mafMold" type="text" class="form-control" placeholder="">
                </div>
              </div>

              <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                <button id="addBtn" type="button" @click="showNewForm" style="float: right;" class="btn btn-warning">
                  <i class="fa fa-plus" style="margin-right: 10px"></i>新增
                </button>
                <button id="searchBtn" type="button" style="float: right;" class="btn btn-primary">
                  <i class="fa fa-search" style="margin-right: 10px"></i>Search
                </button>
              </div>

            </form>

            <table id="manufacturePnTable" class="table table-striped table-bordered">
              <thead></thead>
              <tbody></tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  function showModifyForm(mafPn, mafMold) {
    vm.formType = 'modify'
    vm.showModal = true
    vm.mafPn = mafPn
    vm.mafMold = mafMold
  }
  function showReasonForm(mafPn, mafMold) {
    vm.showReasonModal = true
    vm.mafPn = mafPn
    vm.mafMold = mafMold
  }
  async function deleteData(mafPn, mafMold) {
    let url = `/manufacturePn/api/data/${mafPn}/${mafMold}`
    let header = {
      'Content-Type': 'application/json'
    }
    try {
      const response = await fetch(url, {
        method: 'DELETE',
        headers: new Headers(header),
        credentials: "same-origin"
      })
      if (response.status === 200) {
        notify(`刪除成功`, 'success');
        document.getElementById("searchBtn").click();
      } else {
        throw response.statusText
      }
    } catch (ex) {
      console.error(ex)
      notify(`刪除失敗`, 'danger');
    }
  }

  Vue.component('reason', {
    props: ['mafPn', 'mafMold'],
    template: '#reason-template',
    delimiters: ['${', '}'],
    data() {
      return {
        list: []
      }
    },
    created() {
      this.fetchData()
    },
    updated() {
      for (let i = 0; i < this.list.length; i++) {
        $(`#checked-${this.list[i].err_id}`).iCheck({
          checkboxClass: 'icheckbox_flat-green',
          radioClass: 'iradio_flat-green'
        });
        if (this.list[i].checked) $(`#checked-${this.list[i].err_id}`).iCheck('check');
        $(`#checked-${this.list[i].err_id}`).on('ifChecked', this.toggleAction);
        $(`#checked-${this.list[i].err_id}`).on('ifUnchecked', this.toggleAction);
        $(`#seq-${this.list[i].err_id}`).on('change', this.changeSeq);
      }
    },
    methods: {
      changeSeq(event) {
        console.log(event.currentTarget.id)
        console.log(event.currentTarget.value)
        let errId = event.currentTarget.id.split('-')[1]
        let filteredItem = this.list.filter((item) => { return item.err_id == errId })
        filteredItem[0].Seq = event.currentTarget.value
      },
      toggleAction(event) {
        console.log(event.currentTarget.id)
        console.log(event.type)
        let errId = event.currentTarget.id.split('-')[1]
        let filteredItem = this.list.filter((item) => { return item.err_id == errId })
        if (event.type === 'ifChecked') filteredItem[0].checked = 1
        if (event.type === 'ifUnchecked') filteredItem[0].checked = 0
      },
      async fetchData() {
        let url = `/manufacturePn/api/reason/${this.mafPn}/${this.mafMold}`
        const response = await fetch(url, {
          method: 'GET',
          headers: new Headers({
            'Content-Type': 'application/json'
          }),
          credentials: "same-origin"
        })
        let obj = await response.json()
        this.list = obj
      },
      async save() {
        console.log(this.list)
        try {
          let url = `/manufacturePn/api/reason`
          let header = {
            'Content-Type': 'application/json'
          }
          let body = {
            mafPn: this.mafPn,
            mafMold: this.mafMold,
            list: this.list
          }
          const response = await fetch(url, {
            method: 'POST',
            body: JSON.stringify(body),
            headers: new Headers(header),
            credentials: "same-origin"
          })
          if (response.status === 200) {
            notify(`不良原因維護成功`, 'success');
          } else {
            throw response.statusText
          }

        } catch (ex) {
          console.error(ex)
          notify(`不良原因維護失敗`, 'danger');
        } finally {
          this.$emit('close')
        }
      }
    }
  })

  Vue.component('modal', {
    props: ['formType', 'mafPn', 'mafMold'],
    template: '#modal-template',
    delimiters: ['${', '}'],
    data() {
      return {
        mafPn: null,
        mafMold: null,
        mafHole1: null,
        mafHole2: null,
        mafDate: null,
        mafCto: null,
        mafPke: null,
        mafCytime: null,
        mafPtmd: null,
        mafHev: null,
        mafTryd: null,
        mafPrice: null,
        showRequired: {
          mafPn: false,
          mafMold: false,
          mafHole1: false
        },
        showDuplicated: {
          mafPn: false,
          mafMold: false
        }
      }
    },
    created() {
      if (this.mafPn && this.mafMold) this.fetchData()
    },
    mounted() {
      $('.input-group.date').datepicker({
        autoclose: true,
        format: "yyyy-mm-dd"
      });
    },
    destroyed() {
    },
    computed: {
      title() {
        if (this.formType === 'new') return '新增'
        if (this.formType === 'modify') return '修改'
      },
    },
    methods: {
      async duplicateMafPn() {
        let url = `/manufacturePn/api/duplicate/mafPn/${this.mafPn}`
        const response = await fetch(url, {
          method: 'GET',
          headers: new Headers({
            'Content-Type': 'application/json'
          }),
          credentials: "same-origin"
        })
        console.log(response.status)
        if (response.status === 200) return true
      },
      async duplicateMafMold() {
        let url = `/manufacturePn/api/duplicate/mafMold/${this.mafMold}`
        const response = await fetch(url, {
          method: 'GET',
          headers: new Headers({
            'Content-Type': 'application/json'
          }),
          credentials: "same-origin"
        })
        console.log(response.status)
        if (response.status === 200) return true
      },
      async duplicate() {
        let flag = true

        if (await this.duplicateMafPn()) {
          this.showDuplicated.mafPn = true
          flag = false
        } else {
          this.showDuplicated.mafPn = false
        }

        if (await this.duplicateMafMold()) {
          this.showDuplicated.mafMold = true
          flag = false
        } else {
          this.showDuplicated.mafMold = false
        }
        return flag
      },
      validate() {
        let flag = true

        if (this.mafPn) {
          this.showRequired.mafPn = false
        } else {
          this.showRequired.mafPn = true
          flag = false
        }

        if (this.mafMold) {
          this.showRequired.mafMold = false
        } else {
          this.showRequired.mafMold = true
          flag = false
        }

        if (this.mafHole1) {
          this.showRequired.mafHole1 = false
        } else {
          this.showRequired.mafHole1 = true
          flag = false
        }

        return flag
      },
      async fetchData() {
        let url = `/manufacturePn/api/data/${this.mafPn}/${this.mafMold}`
        const response = await fetch(url, {
          method: 'GET',
          headers: new Headers({
            'Content-Type': 'application/json'
          }),
          credentials: "same-origin"
        })
        let obj = await response.json()
        this.mafHole1 = obj.maf_hole1
        this.mafHole2 = obj.maf_hole2
        this.mafCto = obj.maf_cto
        this.mafPke = obj.maf_pke
        this.mafCytime = obj.maf_cytime
        this.mafPtmd = obj.maf_ptmd
        this.mafHev = obj.maf_hev
        this.mafTryd = obj.maf_tryd
        this.mafPrice = obj.maf_price
        $("#mafDate").val(obj.maf_date);
      },
      async save() {
        if (!this.validate()) return
        if ((this.formType === 'new') && !(await this.duplicate())) return

        try {
          let url = `/manufacturePn/api/data`
          let method = this.formType === 'new' ? 'POST' : 'PUT'
          let header = {
            'Content-Type': 'application/json'
          }
          let body = {
            mafPn: this.mafPn,
            mafMold: this.mafMold,
            mafHole1: this.mafHole1,
            mafHole2: this.mafHole2,
            mafDate: $("#mafDate").val(),
            mafCto: this.mafCto,
            mafPke: this.mafPke,
            mafCytime: this.mafCytime,
            mafPtmd: this.mafPtmd,
            mafHev: this.mafHev,
            mafTryd: this.mafTryd,
            mafPrice: this.mafPrice,
          }
          const response = await fetch(url, {
            method: method,
            body: JSON.stringify(body),
            headers: new Headers(header),
            credentials: "same-origin"
          })
          if (response.status === 200) {
            notify(`${this.title}成功`, 'success');
          } else {
            throw response.statusText
          }

        } catch (ex) {
          console.error(ex)
          notify(`${this.title}失敗`, 'danger');
        } finally {
          this.$emit('close')
        }
      }
    },
    watch: {
    }
  })

  let vm = new Vue({
    delimiters: ['${', '}'],
    el: '#app',
    data: {
      showModal: false,
      showReasonModal: false,
      formType: null,
      mafPn: null,
      mafMold: null
    },
    mounted() {
      manufacturePnModule.init()
      manufacturePnModule.build()
    },
    methods: {
      showNewForm() {
        this.formType = 'new'
        this.showModal = true
        this.mafPn = null
        this.mafMold = null
      },
      async fetchParameters(typeName) {
        let url = `/manufacturePn/parameters?typeName=${typeName}`
        const response = await fetch(url, {
          method: 'GET',
          credentials: "same-origin"
        })
        // console.log(await response.json())
        let result = JSON.parse(JSON.stringify((await response.json()).result))
        this[`${typeName}Types`] = result
      },
      close() {
        this.showModal = false
        this.showReasonModal = false
      }
    },
    watch: {
    }
  })
</script>

<style>
  th,
  td {
    white-space: nowrap;
  }
  .ofy {
		overflow-y: scroll;
		height: 40vh;
	}
  .tableStyle {
    width: 80%;
    border-collapse: collapse;
    border-spacing: 0px;
    padding: 10px 0px 10px 0px;
    margin: 0 auto;
  }

  .thStyle {
    border-width: 1px 0 1px 0;
    border: 2px solid #C5CAE9;
    background-color: #5C6BC0;
    padding: 4px 8px;
    color: #FFFFFF;
    font-weight: bolder;
    font-size: 1em;
  }

  .tdStyle {
    border: 2px solid #C5CAE9;
    padding: 4px 8px;
  }
</style>
<script type="text/x-template" id="reason-template">
  <transition name="modal">
    <div class="modal-mask">
      <div class="modal-wrapper">
        <div class="modal-container" style="width: 600px">

          <div class="modal-header">
            <h4>維護不明原因 - ${mafPn} - ${mafMold}</h4>
          </div>

          <div class="modal-body ofy">
            <div style="width: 100%">
              <table class="tableStyle">
                <tr>
                  <th style ="width: 15%"  class="thStyle">action</th>
                  <th style ="width: 15%"  class="thStyle">id</th>
                  <th style ="width: 50%"  class="thStyle">項目</th>
                  <th style ="width: 20%"  class="thStyle">順序</th>
                </tr>
                <tr v-for="item in list" :key="item.err_id">
                  <td class="tdStyle">
                    <div class="form-inline">
                      <div class="checkbox">
                        <label>
                          <input :id="'checked-' + item.err_id" type="checkbox" class="flat">
                        </label>
                      </div>
                    </div>
                  </td>
                  <td class="tdStyle">${item.err_id}</td>
                  <td class="tdStyle">${item.err_nam}</td>
                  <td class="tdStyle">
                    <input :id="'seq-' + item.err_id" class="form-control input-sm" type="number" :value="item.Seq"></input>
                  </td>
                </tr>
              </table>
            </div>
          </div>

          <div class="modal-footer">
            <button type="button" class="btn btn-danger" style="float: right" @click="$emit('cancel')">Cancel</button>
            <button type="button" class="btn btn-warning" style="float: right" @click="save">Save</button>
          </div>
        </div>
      </div>
    </div>
  </transition>
</script>

<script type="text/x-template" id="modal-template">
  <transition name="modal">
    <div class="modal-mask">
      <div class="modal-wrapper">
        <div class="modal-container" style="width: 700px">

          <div class="modal-header">
            <h4>${title}生產料號</h4>
          </div>

          <div class="modal-body">
            <div style="width: 100%">
              <form class="form-horizontal">
                <div class="col-md-6 col-sm-6 col-xs-12">
                  <div class="form-group">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12" for="first-name"><span class="required">*</span> 料號
                    </label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                      <input :disabled="formType==='modify'" type="text" v-model="mafPn" class="form-control" maxlength="10" autocomplete="off">
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-12"></div>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                      <transition name="fade">
                        <label v-if="showRequired.mafPn" class="control-label" for="first-name" ><font  class="required">This field is required.</font></span>
                      </transition>
                      <transition name="fade">
                        <label v-if="showDuplicated.mafPn" class="control-label" for="first-name" ><font  class="required">This field is duplicated.</font></span>
                      </transition>
                    </div>

                  </div>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                  <div class="form-group">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12" for="last-name"><span class="required">*</span> 模號
                    </label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                      <input :disabled="formType==='modify'" class="form-control" v-model="mafMold" maxlength="2" autocomplete="off">
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-12"></div>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                      <transition name="fade">
                        <label v-if="showRequired.mafMold" class="control-label" for="first-name" ><font  class="required">This field is required.</font></span>
                      </transition>
                      <transition name="fade">
                        <label v-if="showDuplicated.mafMold" class="control-label" for="first-name" ><font  class="required">This field is duplicated.</font></span>
                      </transition>
                    </div>
                  </div>
                </div>

                <div class="col-md-6 col-sm-6 col-xs-12">
                  <div class="form-group">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12" for="last-name"><span class="required">*</span> 穴號1
                    </label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                      <input class="form-control" list="browsers" v-model="mafHole1" name="browser" autocomplete="off">
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-12"></div>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                      <transition name="fade">
                        <label v-if="showRequired.mafHole1" class="control-label" for="first-name" ><font class="required">This field is required.</font></span>
                      </transition>
                    </div>
                  </div>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                  <div class="form-group">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12" for="last-name">穴號2
                    </label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                      <input class="form-control" list="browsers" v-model="mafHole2" name="browser" autocomplete="off">
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-12"></div>
                    <div class="col-md-8 col-sm-8 col-xs-12"></div>
                  </div>
                </div>

                <div class="col-md-6 col-sm-6 col-xs-12">
                  <div class="form-group">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12" for="last-name">維護日</label>
                    <div class="col-md-8 col-sm-8 col-xs-12">

                      <div class="input-group date" style="margin-bottom: 0px">
                        <input id="mafDate" type="text" class="form-control">
                        <span class="input-group-addon">
                          <i class="glyphicon glyphicon-th"></i>
                        </span>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="col-md-6 col-sm-6 col-xs-12">
                  <div class="form-group">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12" for="last-name">連片數
                    </label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                      <input class="form-control" type="number" v-model="mafCto" autocomplete="off">
                    </div>
                  </div>
                </div>

                <div class="col-md-6 col-sm-6 col-xs-12">
                  <div class="form-group">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12" for="last-name">包裝數
                    </label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                      <input class="form-control" type="number" v-model="mafPke" autocomplete="off">
                    </div>
                  </div>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                  <div class="form-group">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12" for="last-name">標準稼動秒數
                    </label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                      <input class="form-control" v-model="mafCytime" type="number" autocomplete="off">
                    </div>
                  </div>
                </div>

                <div class="col-md-6 col-sm-6 col-xs-12">
                  <div class="form-group">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12" for="last-name">塑料型號
                    </label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                      <input class="form-control" list="browsers" v-model="mafPtmd" name="browser" autocomplete="off">
                    </div>
                  </div>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                  <div class="form-group">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12" for="last-name">一模重量
                    </label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                      <input class="form-control" list="browsers" type="number" v-model="mafHev" name="browser" autocomplete="off">
                    </div>
                  </div>
                </div>

                <div class="col-md-6 col-sm-6 col-xs-12">
                  <div class="form-group">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12" for="last-name">目標良率
                    </label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                      <input class="form-control" list="browsers" v-model="mafTryd" type="number" name="browser" autocomplete="off">
                    </div>
                  </div>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                  <div class="form-group">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12" for="last-name">單價
                    </label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                      <input class="form-control" list="browsers" v-model="mafPrice" type="number" name="browser" autocomplete="off">
                    </div>
                  </div>
                </div>

              </form>
            </div>
          </div>

          <div class="modal-footer">
            <button type="button" class="btn btn-danger" style="float: right" @click="$emit('cancel')">Cancel</button>
            <button type="button" class="btn btn-warning" style="float: right" @click="save">Save</button>
          </div>
        </div>
      </div>
    </div>
  </transition>
</script>
